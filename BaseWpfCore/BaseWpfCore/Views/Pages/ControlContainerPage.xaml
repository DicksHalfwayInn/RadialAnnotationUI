<local:BasePage x:TypeArguments="local:ContainerViewModel"  x:Class="BaseWpfCore.ControlContainerPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:BaseWpfCore"
      mc:Ignorable="d" 
      d:DesignHeight="700" d:DesignWidth="1000">

    <Grid Background="Gainsboro">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" HorizontalAlignment="Right"
                       FontSize="20"
                       VerticalAlignment="Bottom"
                       Text="Start Date : " />
            <!--<wpfx:DateTimePicker Height="25" HorizontalAlignment="Left" 
                                 Margin="42,26,0,0" Name="DateTimePicker1" 
                                 VerticalAlignment="Top" Width="250" />-->
            <DatePicker Grid.Column="1" Height="25" HorizontalAlignment="Center" 
                        Margin="42,26,0,0" Name="datePicker1" 
                        VerticalAlignment="Top" Width="115" 
                        
                        SelectedDate="{Binding CurrentDateToShow, Mode=TwoWay}">
            </DatePicker>
            <!--TODO: I was trying to add some kind of binding from the 
            datepicker on the page to the ContainerViewModel to update 
            the current display date -->
            <!--SelectedDateChanged={Binding DateChanged}"/>-->

            <!--<Button Grid.Column="2" FontSize="18" FontWeight="Bold"
                    Background="LimeGreen"
                    Content="{Binding MorningOrNight, 
                Converter={local:AMAndPMToButtonContentConverter}}"
                    Command="{Binding ToggleAmAndPmCommand}"
                    >-->
            <Button Grid.Column="2" FontSize="18" FontWeight="Bold"
                    Background="LimeGreen"
                    Content="AM or PM"
                    Command="{Binding ToggleAmAndPmCommand}"
                    >
            </Button>
        </Grid>

        <Grid Grid.Row="1" Background="Black" Height="50">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="5" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="5" />
            </Grid.ColumnDefinitions>

            <Button Grid.Column="1" Content="  Back 24 hrs " Background="LimeGreen"
                    FontSize="18" Command="{Binding GoBack24HoursCommand}">
            </Button>
            
            <Button Grid.Column="2" Content="  Back 12 hrs  " Background="LimeGreen"
                    FontSize="18" Command="{Binding GoBack12HoursCommand}">
            </Button>

            <TextBlock Grid.Column="3" Text="{Binding DateTimePrettyText}"
                       FontSize="25" VerticalAlignment="Center"
                       HorizontalAlignment="Center" 
                       Background="Beige"/>

            <Button Grid.Column="4" Content="Forward 12 hrs" Background="LimeGreen"
                    FontSize="18" Command="{Binding GoForward12HoursCommand}">
            </Button>

            <Button Grid.Column="5" Content="Forward 24 hrs" Background="LimeGreen"
                    FontSize="18" Command="{Binding GoForward24HoursCommand}">
            </Button>
        </Grid>


        <Grid
            Background="Black"
            Grid.Row="2">

            <!-- BackGround -->
            <ItemsControl 
                DataContext="{Binding BackGround}"
                ItemsSource="{Binding RadialGraphicSegments}">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas 
                            Width="{Binding ContainerWidth}"
                            Height="{Binding ContainerHeight}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter
                            Property="Canvas.Left"
                            Value="{Binding Left}"
                            />
                        <Setter
                            Property="Canvas.Top"
                            Value="{Binding Top}"
                            />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:AnnotationControl Background="{Binding BadgeColor, Converter={local:BackGroundColorConverter}}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>


            </ItemsControl>

            <!-- Annotations -->
            <ItemsControl 
                DataContext="{Binding MainBadges}"
                Grid.Row="1"
                ItemsSource="{Binding RadialGraphicSegments}">

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas 
                            Width="{Binding ContainerWidth}"
                            Height="{Binding ContainerHeight}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter
                            Property="Canvas.Left"
                            Value="{Binding Left}"
                            />
                        <Setter
                            Property="Canvas.Top"
                            Value="{Binding Top}"
                            />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <local:AnnotationControl Background="{Binding BadgeColor, Converter={local:BackGroundColorConverter}}" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>


            </ItemsControl>
        </Grid>


    </Grid>
</local:BasePage>
